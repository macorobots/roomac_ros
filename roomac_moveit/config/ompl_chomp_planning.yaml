planning_plugin: ompl_interface/OMPLPlanner

# override trajectory_initialization_method
trajectory_initialization_method: fillTrajectory

# The request adapters (plugins) used when planning with OMPL, ORDER MATTERS
request_adapters: default_planner_request_adapters/AddTimeParameterization
  default_planner_request_adapters/FixWorkspaceBounds
  default_planner_request_adapters/FixStartStateBounds
  default_planner_request_adapters/FixStartStateCollision
  default_planner_request_adapters/FixStartStatePathConstraints
  chomp/OptimizerAdapter

# define capabilites that are loaded on start (space seperated)
capabilities: ""
# inhibit capabilites (space seperated)
disable_capabilities: ""

planning_time_limit: 10.0
max_iterations: 200
max_iterations_after_collision_free: 5
smoothness_cost_weight: 0.1
obstacle_cost_weight: 1.0
learning_rate: 0.01
smoothness_cost_velocity: 0.0
smoothness_cost_acceleration: 1.0
smoothness_cost_jerk: 0.0
ridge_factor: 0.01
use_pseudo_inverse: false
pseudo_inverse_ridge_factor: 1e-4
joint_update_limit: 0.1
collision_clearence: 0.2
collision_threshold: 0.07
use_stochastic_descent: true
enable_failure_recovery: true
max_recovery_attempts: 5

planner_configs:
  SBL:
    type: geometric::SBL
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
  EST:
    type: geometric::EST
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0 setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability. default: 0.05
  LBKPIECE:
    type: geometric::LBKPIECE
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    border_fraction: 0.9 # Fraction of time focused on boarder default: 0.9
    min_valid_path_fraction: 0.5 # Accept partially valid moves above fraction. default: 0.5
  BKPIECE:
    type: geometric::BKPIECE
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    border_fraction: 0.9 # Fraction of time focused on boarder default: 0.9
    failed_expansion_score_factor: 0.5 # When extending motion fails, scale score by factor. default: 0.5
    min_valid_path_fraction: 0.5 # Accept partially valid moves above fraction. default: 0.5
  KPIECE:
    type: geometric::KPIECE
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability. default: 0.05
    border_fraction: 0.9 # Fraction of time focused on boarder default: 0.9 (0.0,1.]
    failed_expansion_score_factor: 0.5 # When extending motion fails, scale score by factor. default: 0.5
    min_valid_path_fraction: 0.5 # Accept partially valid moves above fraction. default: 0.5
  RRT:
    type: geometric::RRT
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability? default: 0.05
  RRTConnect:
    type: geometric::RRTConnect
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    optimization_objective: MaximizeMinClearanceObjective
  RRTstar:
    type: geometric::RRTstar
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability? default: 0.05
    delay_collision_checking: 1 # Stop collision checking as soon as C-free parent found. default 1
    optimization_objective: MaximizeMinClearanceObjective
  TRRT:
    type: geometric::TRRT
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability? default: 0.05
    max_states_failed: 10 # when to start increasing temp. default: 10
    temp_change_factor: 2.0 # how much to increase or decrease temp. default: 2.0
    min_temperature: 10e-10 # lower limit of temp change. default: 10e-10
    init_temperature: 10e-6 # initial temperature. default: 10e-6
    frountier_threshold: 0.0 # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
    frountierNodeRatio: 0.1 # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
    k_constant: 0.0 # value used to normalize expresssion. default: 0.0 set in setup()
  PRM:
    type: geometric::PRM
    max_nearest_neighbors: 10 # use k nearest neighbors. default: 10
  PRMstar:
    type: geometric::PRMstar
  FMT:
    type: geometric::FMT
    num_samples: 1000 # number of states that the planner should sample. default: 1000
    radius_multiplier: 1.1 # multiplier used for the nearest neighbors search radius. default: 1.1
    nearest_k: 1 # use Knearest strategy. default: 1
    cache_cc: 1 # use collision checking cache. default: 1
    heuristics: 0 # activate cost to go heuristics. default: 0
    extended_fmt: 1 # activate the extended FMT*: adding new samples if planner does not finish successfully. default: 1
  BFMT:
    type: geometric::BFMT
    num_samples: 1000 # number of states that the planner should sample. default: 1000
    radius_multiplier: 1.0 # multiplier used for the nearest neighbors search radius. default: 1.0
    nearest_k: 1 # use the Knearest strategy. default: 1
    balanced: 0 # exploration strategy: balanced true expands one tree every iteration. False will select the tree with lowest maximum cost to go. default: 1
    optimality: 1 # termination strategy: optimality true finishes when the best possible path is found. Otherwise, the algorithm will finish when the first feasible path is found. default: 1
    heuristics: 1 # activates cost to go heuristics. default: 1
    cache_cc: 1 # use the collision checking cache. default: 1
    extended_fmt: 1 # Activates the extended FMT*: adding new samples if planner does not finish successfully. default: 1
  PDST:
    type: geometric::PDST
  STRIDE:
    type: geometric::STRIDE
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability. default: 0.05
    use_projected_distance: 0 # whether nearest neighbors are computed based on distances in a projection of the state rather distances in the state space itself. default: 0
    degree: 16 # desired degree of a node in the Geometric Near-neightbor Access Tree (GNAT). default: 16
    max_degree: 18 # max degree of a node in the GNAT. default: 12
    min_degree: 12 # min degree of a node in the GNAT. default: 12
    max_pts_per_leaf: 6 # max points per leaf in the GNAT. default: 6
    estimated_dimension: 0.0 # estimated dimension of the free space. default: 0.0
    min_valid_path_fraction: 0.2 # Accept partially valid moves above fraction. default: 0.2
  BiTRRT:
    type: geometric::BiTRRT
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    temp_change_factor: 0.1 # how much to increase or decrease temp. default: 0.1
    init_temperature: 100 # initial temperature. default: 100
    frountier_threshold: 0.0 # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
    frountier_node_ratio: 0.1 # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
    cost_threshold: 1e300 # the cost threshold. Any motion cost that is not better will not be expanded. default: inf
  LBTRRT:
    type: geometric::LBTRRT
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability. default: 0.05
    epsilon: 0.4 # optimality approximation factor. default: 0.4
  BiEST:
    type: geometric::BiEST
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
  ProjEST:
    type: geometric::ProjEST
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05 # When close to goal select goal, with this probability. default: 0.05
  LazyPRM:
    type: geometric::LazyPRM
    range: 0.0 # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
  LazyPRMstar:
    type: geometric::LazyPRMstar
  SPARS:
    type: geometric::SPARS
    stretch_factor: 3.0 # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
    sparse_delta_fraction: 0.25 # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
    dense_delta_fraction: 0.001 # delta fraction for interface detection. default: 0.001
    max_failures: 1000 # maximum consecutive failure limit. default: 1000
  SPARStwo:
    type: geometric::SPARStwo
    stretch_factor: 3.0 # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
    sparse_delta_fraction: 0.25 # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
    dense_delta_fraction: 0.001 # delta fraction for interface detection. default: 0.001
    max_failures: 5000 # maximum consecutive failure limit. default: 5000
right_arm:
  planner_configs:
    - SBL
    - EST
    - LBKPIECE
    - BKPIECE
    - KPIECE
    - RRT
    - RRTConnect
    - RRTstar
    - TRRT
    - PRM
    - PRMstar
    - FMT
    - BFMT
    - PDST
    - STRIDE
    - BiTRRT
    - LBTRRT
    - BiEST
    - ProjEST
    - LazyPRM
    - LazyPRMstar
    - SPARS
    - SPARStwo
  projection_evaluator: joints(shoulder_pitch_right_joint,shoulder_roll_right_joint)
  longest_valid_segment_fraction: 0.01
hand:
  planner_configs:
    - SBL
    - EST
    - LBKPIECE
    - BKPIECE
    - KPIECE
    - RRT
    - RRTConnect
    - RRTstar
    - TRRT
    - PRM
    - PRMstar
    - FMT
    - BFMT
    - PDST
    - STRIDE
    - BiTRRT
    - LBTRRT
    - BiEST
    - ProjEST
    - LazyPRM
    - LazyPRMstar
    - SPARS
    - SPARStwo
  projection_evaluator: joints(gripper_finger_r_right_joint,gripper_finger_l_right_joint)
  longest_valid_segment_fraction: 0.01
