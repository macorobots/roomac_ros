<launch>
  <arg name="pipeline" default="ompl" />
  <arg name="gazebo" default="false" />

  <!-- GDB Debug Option -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="gdb -x $(find roomac_moveit)/launch/gdb_settings.gdb --ex run --args" />

  <!-- Verbose Mode Option -->
  <arg name="info" default="$(arg debug)" />
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg if="$(arg info)" name="command_args" value="--debug" />

  <arg name="capabilities" default="" />
  <!-- load these non-default MoveGroup capabilities (space seperated) -->
  <!--
    <arg name="capabilities" value="
    a_package/AwsomeMotionPlanningCapability
    another_package/GraspPlanningPipeline
    " />
  -->

  <arg name="disable_capabilities" default="" />
  <!-- inhibit these default MoveGroup capabilities (space seperated) -->
  <!--
  <arg name="disable_capabilities" value="
                move_group/MoveGroupKinematicsService
                move_group/ClearOctomapService
                " />
  -->


  <!-- load URDF, SRDF and joint_limits configuration -->

  <!-- The semantic description that corresponds to the URDF -->
  <param name="robot_description_semantic" textfile="$(find roomac_moveit)/config/roomac.srdf" />

  <!-- Load updated joint limits (override information from URDF) -->
  <group ns="robot_description_planning">
    <!-- increase wait time when looking up transform from camera to robot - artag sometimes isn't detected -->
    <param name="shape_transform_cache_lookup_wait_time" value="1.0" />
    <rosparam if="$(arg gazebo)" command="load" file="$(find roomac_moveit)/config/joint_limits_simulation.yaml" />
    <rosparam unless="$(arg gazebo)" command="load" file="$(find roomac_moveit)/config/joint_limits.yaml" />

    <rosparam command="load" file="$(find roomac_moveit)/config/cartesian_limits.yaml" />

    <!-- Load padding -->
    <!-- TODO: doesn't appear to be working correctly -->
    <rosparam command="load" file="$(find roomac_moveit)/config/padding.yaml" />
  </group>

  <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
  <rosparam ns="robot_description_kinematics" command="load" file="$(find roomac_moveit)/config/kinematics.yaml" />

  <group ns="move_group">
    <!-- Planning Functionality -->
    <include file="$(find roomac_moveit)/launch/planning_pipeline/$(arg pipeline)_planning_pipeline.launch.xml">
      <arg name="capabilities" value="$(arg capabilities)" />
      <arg name="disable_capabilities" value="$(arg disable_capabilities)" />
    </include>

    <!-- Trajectory Execution Functionality -->
    <rosparam file="$(find roomac_moveit)/config/trajectory_execution.yaml" />
    <!-- loads ros_controllers to the param server -->
    <rosparam file="$(find roomac_moveit)/config/moveit_controllers.yaml" />
    <!-- todo is necessary? -->
    <rosparam if="$(arg gazebo)" file="$(find roomac_simulation)/config/ros_controllers.yaml" />

    <!-- Sensors Functionality -->
    <!-- Don't load kinect sensor in simulation - it makes it run slower, there are issues with detecting bottle as an obstacle.
    As there is separate table detection, octomap obstacles are not really needed, there aren't any additional 
    obstacles in the workspace of the manipulator -->
    <rosparam unless="$(arg gazebo)" command="load" file="$(find roomac_moveit)/config/sensors_3d.yaml" />
  </group>

  <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <rosparam command="load" file="$(find roomac_moveit)/config/move_group.yaml" />

    <!-- For simulation: -->
    <remap if="$(arg gazebo)" from="/joint_states" to="/roomac/joint_states" />
    <remap if="$(arg gazebo)" from="arm_position_controller/follow_joint_trajectory" to="/roomac/arm_position_controller/follow_joint_trajectory" />
    <remap if="$(arg gazebo)" from="gripper_controller/follow_joint_trajectory" to="/roomac/gripper_controller/follow_joint_trajectory" />

    <!-- todo: it may no longer be necessary -->
    <!-- For real robot: -->
    <!-- Can't change fake execution for now, as I don't have controller defined for real robot -->
    <!-- Probably would be nice to define controller eventually -->
    <remap unless="$(arg gazebo)" from="/move_group/fake_controller_joint_states" to="/joint_states" />
  </node>
</launch>