<launch>
<!-- Roomac scripts -->
  <include file="$(find roomac)/launch/autonomous_mission.launch" />

  <node name="simulation_picking_object_manager" pkg="roomac_autonomous_manipulation" type="simulation_picking_object_manager.py" output="screen"/>
  <node name="add_robot_body_collision_to_scene" pkg="roomac_autonomous_manipulation" type="add_robot_body_collision_to_scene.py" output="screen"/>

<!-- ARtag -->
  <!-- Difference in kinect frames (real vs simulation), so parallel isn't working correctly.
  There is no need for it though, in simulation detection accuracy is very good -->
  <include file="$(find roomac_ar_tag)/launch/ar_tag.launch">
    <arg name="upper_kinect_mounted_parellel" value="false"/>
  </include>

<!-- Rtabmap -->
  <include file="$(find roomac_rtabmap)/launch/rtabmap_localization_fusion.launch">
    <remap from="/odometry/filtered" to="/odom"/>
    <arg name="rgb_image_topic" value="/camera/color/image_raw"/>
    <arg name="depth_image_topic" value="/camera/depth/image_raw"/>
    <arg name="rgb_camera_info_topic" value="/camera/color/camera_info"/>
  </include>

<!-- Move base -->
  <include file="$(find roomac_move_base)/launch/move_base_fusion.launch">
    <remap from="/odometry/filtered" to="/odom"/>
  </include>

<!-- Gazebo -->
  <arg name="gazebo_gui" default="true"/>
  <arg name="world_name" value="$(find roomac_simulation)/worlds/small_house.world"/>

  <include file="$(find roomac_simulation)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(find roomac_description)/urdf/roomac_simulation_picking.xacro" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -x 0.3 -y 0 -z 0.2"
    respawn="false" output="screen" />

  <include file="$(find roomac_moveit)/launch/ros_controllers.launch"/>

<!-- MoveIt -->
  <arg name="urdf_path" default="$(find roomac_description)/urdf/roomac_simulation_picking.xacro"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    <rosparam param="source_list">[/roomac/joint_states]</rosparam>
  </node>

  <node name="robot_state_publisher" output="screen" pkg="robot_state_publisher" respawn="true" type="robot_state_publisher">
    <remap from="/joint_states" to="/roomac/joint_states"/>
  </node>

  <include file="$(find roomac_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="load_robot_description" value="false"/>
    <arg name="gazebo" value="true"/>
    <arg name="simulation_description" value="true" />
  </include>

<!-- RViz -->
  <include file="$(find roomac_moveit)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find roomac_moveit)/launch/moveit.rviz"/>
    <arg name="debug" value="false"/>
  </include>

  <node args="-d $(find roomac_move_base)/rviz/rviz_move_base.rviz" name="rviz" pkg="rviz" type="rviz"/>

<!-- ROS Mobile -->
  <include file="$(find roomac)/launch/ros_mobile.launch"/>
</launch>
