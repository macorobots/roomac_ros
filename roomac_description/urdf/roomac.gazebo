<?xml version="1.0" ?>
<robot name="roomac" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />
<xacro:property name="standard_friction" value="1.0" />
<xacro:property name="caster_friction" value="0.01" />
<xacro:property name="wheel_friction" value="100.0" />
<xacro:property name="finger_friction" value="100.0" />

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="caster_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="hub_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="hub_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="frame_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="eye_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_wrist_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_finger_1_right_1">
  <material>${body_color}</material>
  <mu1>${finger_friction}</mu1>
  <mu2>${finger_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_finger_2_right_1">
  <material>${body_color}</material>
  <mu1>${finger_friction}</mu1>
  <mu2>${finger_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_tire_right_1">
  <material>${body_color}</material>
  <mu1>${caster_friction}</mu1>
  <mu2>${caster_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_tire_left_1">
  <material>${body_color}</material>
  <mu1>${caster_friction}</mu1>
  <mu2>${caster_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_tire_right_1">
  <material>${body_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wheel_tire_left_1">
  <material>${body_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_link_frames_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_gear_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wrist_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_base_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="head_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="eye_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_base_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_finger_2_left_1">
  <material>${body_color}</material>
  <mu1>${finger_friction}</mu1>
  <mu2>${finger_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_finger_1_left_1">
  <material>${body_color}</material>
  <mu1>${finger_friction}</mu1>
  <mu2>${finger_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wrist_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_wrist_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_gear_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<!-- Pointcloud in gazebo is published in different coordinates than in reality, real frame has to be rotated -->
<joint name="gazebo_kinect_joint" type="fixed">
		<origin rpy="${-pi/2} 0 ${-pi/2}" xyz="0 0 0"/>
		<parent link="camera_link"/>
		<child link="gazebo_camera_link"/>
</joint>
<link name="gazebo_camera_link" />

<xacro:property name="camera_name" value="camera" />
<xacro:property name="frame_name" value="gazebo_camera_link" />

<gazebo reference="camera_link">
  <sensor name="camera_plugin" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>${camera_name}_ir</cameraName>
      <imageTopicName>/${camera_name}/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/${camera_name}/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/${camera_name}/depth_registered/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/${camera_name}/depth_registered/points</pointCloudTopicName>
      <frameName>${frame_name}</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
      <robotNamespace>/</robotNamespace>
    </plugin>
  </sensor>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <updateRate>10</updateRate>
    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_wheel</leftJoint>
    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_wheel</rightJoint>
    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.507</wheelSeparation>
    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.29</wheelDiameter>
    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>0.5</wheelAcceleration>
    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>
    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>
    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>/wheel_odom/odom</odometryTopic>
    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>
    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD, Not really correct, for setting one I got warning -->
    <odometrySource>world</odometrySource>
    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>
    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>
    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>
    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>

    <rosDebugLevel>na</rosDebugLevel>
    <publishOdomTF>false</publishOdomTF>
    <publishTf>true</publishTf>
  </plugin>
</gazebo>

<gazebo reference="imu">
  <gravity>true</gravity>
  <sensor name="imu_sensor" type="imu">
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <topic>__default_topic__</topic>
    <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <topicName>/imu/orientation</topicName>
      <bodyName>imu</bodyName>
      <updateRateHZ>10.0</updateRateHZ>
      <gaussianNoise>0.0</gaussianNoise>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <frameName>imu</frameName>
      <initialOrientationAsReference>false</initialOrientationAsReference>
    </plugin>
    <pose>0 0 0 0 0 0</pose>
  </sensor>
</gazebo>

<gazebo>
  <plugin filename="libgazebo_ros_control.so" name="control">
    <robotNamespace>/roomac</robotNamespace>
  </plugin>
</gazebo>

</robot>
