<?xml version="1.0" ?>
<robot name="roomac" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />
<xacro:property name="standard_friction" value="1.0" />
<xacro:property name="caster_friction" value="0.01" />
<xacro:property name="wheel_friction" value="100.0" />

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <updateRate>10</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_wheel</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_wheel</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <!-- <wheelSeparation>0.5380</wheelSeparation> -->

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <!-- <wheelDiameter>0.2410</wheelDiameter> -->

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>

<gazebo>
  <plugin filename="libgazebo_ros_control.so" name="control">
    <robotNamespace>/roomac</robotNamespace>
  </plugin>
</gazebo>

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="right_wheel_hub_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_wrist_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wrist_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_right_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="base_up_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="head_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_wheel_hub_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="shoulder_elbow_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="elbow_wrist_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wrist_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="gripper_left_1">
  <material>${body_color}</material>
  <mu1>${standard_friction}</mu1>
  <mu2>${standard_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="right_wheel_1">
  <material>${body_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${body_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="right_caster_1">
  <material>${body_color}</material>
  <mu1>${caster_friction}</mu1>
  <mu2>${caster_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_caster_1">
  <material>${body_color}</material>
  <mu1>${caster_friction}</mu1>
  <mu2>${caster_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

</robot>
